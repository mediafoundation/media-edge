{
    order bandwidth before header
    auto_https disable_redirects
    on_demand_tls {
        ask http://{{ origins_ips[0] }}:7878/domains
        interval 2m
        burst 5
    }
    log {
        format elastic
        output file /var/log/caddy/admin_access.log
    }
}

{% if domain is defined %}
*.{{domain}} {
    header Server "MediaEdge v{{ media_edge_version }} | https://media.network"
    reverse_proxy http://localhost:8080 {
        @hasBandwidthLimit header X-Bandwidth-Limit Yes
        handle_response @hasBandwidthLimit {
            bandwidth {
                limit 50000
            }
            reverse_proxy http://localhost:8080
        }
    }
    tls {
        dns lego_deprecated cloudns
        resolvers 1.1.1.1
    }
    log {
        format elastic
        output file /var/log/caddy/access.log
    }
}
{% endif %}


https:// {
    header Server "MediaEdge v{{ media_edge_version }} | https://media.network"
    reverse_proxy http://localhost:8080 {
        @hasBandwidthLimit header X-Bandwidth-Limit Yes
        handle_response @hasBandwidthLimit {
            bandwidth {
                limit 50000
            }
            reverse_proxy http://localhost:8080
        }
    }
    tls {
        on_demand
    }
    log {
        format elastic
        output file /var/log/caddy/access.log
    }
}

http:// {
    header Server "MediaEdge v{{ media_edge_version }} | https://media.network"
    reverse_proxy http://localhost:8080 {
        @hasBandwidthLimit header X-Bandwidth-Limit Yes
        handle_response @hasBandwidthLimit {
            bandwidth {
               limit 50000
            }
            reverse_proxy http://localhost:8080
        }
    }
    log {
        format elastic
        output file /var/log/caddy/access.log
    }
}