- name: Remove possible conflicting packages
  apt:
    name:
      - docker.io
      - docker-doc
      - docker-compose
      - podman-docker
      - containerd
      - runc
    state: absent

- name: Install required packages
  apt:
    name:
      - ca-certificates
      - curl
    state: present
    update_cache: yes

- name: Update APT package index
  shell:  apt-get update

- name: Install required packages
  shell:  apt-get install -y ca-certificates curl

- name: Create directory for apt keyrings
  shell:  install -m 0755 -d /etc/apt/keyrings

- name: Download Docker's official GPG key
  shell:  curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc

- name: Change permissions for Docker's GPG key
  shell:  chmod a+r /etc/apt/keyrings/docker.asc

- name: Add Docker's official APT repository
  shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo $VERSION_CODENAME) stable" |  tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Update APT package index again
  shell:  apt-get update

- name: Install Docker CLI
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Verify Docker installation by running hello-world
  command: docker run hello-world
  register: hello_world_output

- name: Print hello-world output
  debug:
    var: hello_world_output.stdout

- name: Stop all containers
  shell: docker stop $(docker ps -a -q)

- name: Remove all containers
  shell: docker rm $(docker ps -a -q)

- name: Install postgres
  shell: docker run --rm --name some-postgres -p 5432:5432 -e POSTGRES_PASSWORD={{db_password}} -e POSTGRES_USER={{db_user}} -e POSTGRES_DB={{db_name}} -d postgres:14

- name: Create containers folder
  file:
    path: /root/containers
    state: directory

- name: Install Caddy
  block:
    - name: Copy CaddyFile
      copy:
        src: files/origin/caddy/Caddyfile.j2
        dest: /root/containers/Caddyfile

    - name: Copy caddy DockerFile
      copy:
        src: files/origin/docker/Dockerfile.caddy
        dest: /root/containers/Dockerfile.caddy

    - name: Build image
      shell: docker build -t caddy -f Dockerfile.caddy .
      args:
        chdir: /root/containers

- name: Install varnish
  block:
    - name: Copy varnish DockerFile
      copy:
        src: files/origin/docker/Dockerfile.varnish
        dest: /root/containers/Dockerfile.varnish

    - name: Copy Varnish config file
      template:
        src: files/origin/varnish/default.vcl.j2
        dest: /root/containers/default.vcl

    - name: Copy Varnish systemd service file
      template:
        src: files/origin/varnish/varnish.service.j2
        dest: /root/containers/varnish.service

    - name: Build image
      shell: docker build -t varnish-origin -f Dockerfile.varnish .
      args:
        chdir: /root/containers































