- name: Check if origins group exists and is not empty
  set_fact:
    origin_ips_exist: "{{ (groups['origin'] | length > 0) | bool }}"
    
- name: Store origins IP addresses in a variable
  set_fact:
    origin_ips: "{{ groups['origin'] | map('extract', hostvars, 'ansible_host') | list }}"
  when: origin_ips_exist

- name: Prompt for origins IP addresses if not defined
  block:
    - pause:
        prompt: "Enter comma-separated list of origins IP addresses (e.g., 192.168.1.1,192.168.1.2):"
        echo: yes
      register: origin_ips_input
    - set_fact:
        origin_ips: "{{ origin_ips_input.user_input.split(',') | map('trim') | list }}"
  when: not origin_ips_exist | default(false)

- name: Store postgresql password if not defined
  block:
    - pause:
        prompt: "\nEnter your postgresql password"
        echo: no
      register: postgres_password_input
    - set_fact:
        postgres_password: "{{ postgres_password_input.user_input }}"
  when: inventory_hostname in groups["origin"] and (postgres_password is not defined or postgres_password == "" or postgres_password == none)

- name: Store wallet address if not defined
  block:
    - pause:
        prompt: "\nEnter your provider wallet address. (The one with the staking)"
        echo: yes
      register: wallet_address_input
    - set_fact:
        wallet_address: "{{ wallet_address_input.user_input }}"
  when: inventory_hostname in groups["origin"] and (wallet_address is not defined or wallet_address == "" wallet_address == none)

- name: Display result
  debug:
    msg: "Is my_variable an empty string? {{ private_key }}"

- name: Store private key if not defined
  block:
    - pause:
        prompt: "\nEnter your wallet private key for resource(s) decrypt. This should match the public encryption key provided on the app. (It may or may not be the same as the staking one for security reasons)."
        echo: no
      register: private_key_input
    - set_fact:
        private_key: "{{ private_key_input.user_input }}"
  when: inventory_hostname in groups["origin"] and (private_key is not defined or private_key == "" or private_key == none)

- name: Store disk space if not defined
  block:
    - pause:
        prompt: "\nEnter your server disk space, example: 10G"
        register: disk_space_input
    - set_fact:
        disk_space: "{{ disk_space_input.user_input }}"
  when: inventory_hostname in groups["edge"] and (disk_space is not defined or disk_space == "" or disk_space == none)

- name: Store cpu cores if not defined
  block:
    - pause:
        prompt: "\nEnter your server cpu cores"
      register: cpu_cores_input
    - set_fact:
        cpu_cores: "{{ cpu_cores_input.user_input }}"
  when: inventory_hostname in groups["edge"] and (cpu_cores is not defined or cpu_cores == "" or cpu_cores == none)

- name: Store system_ram if not defined
  block:
    - pause:
        prompt: "\nEnter your server system_ram"
      register: system_ram_input
    - set_fact:
        system_ram: "{{ system_ram_input.user_input }}"
  when: inventory_hostname in groups["edge"] and (system_ram is not defined or system_ram == "" or system_ram == none)

# - name: 
#   debug:
#     msg: "{{postgres_password}}"

# - name:
#   pause:
#     prompt: "Do you want to use the origins in testing mode? (yes/no) [no]: "
#     echo: yes
#   register: testing_mode
#   when: inventory_hostname in groups["origin"]

# - name:
#   pause:
#     prompt: "\nEnter your wallet network"
#     echo: no
#   register: wallet_network
#   when: inventory_hostname in groups["edge"]