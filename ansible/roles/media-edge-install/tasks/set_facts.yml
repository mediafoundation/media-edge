- name: Check if origins group exists and is not empty
  set_fact:
    origin_ips_exist: true
  when: "'origin' in groups and groups['origin'] | length > 0"

- name: Store origins IP addresses in a variable
  set_fact:
    origin_ips: "{{ groups['origin'] | map('extract', hostvars, 'ansible_host') | list }}"
  when: origin_ips_exist | default(false)

- name: Prompt for origins IP addresses
  pause:
    prompt: "Enter comma-separated list of origins IP addresses (e.g., 192.168.1.1,192.168.1.2):"
    echo: yes
  register: origin_ips_input
  when: not origin_ips_exist | default(false)

- name: Store origins IP addresses in a variable
  set_fact:
    origin_ips: "{{ origin_ips_input.user_input.split(',') | map('trim') | list }}"
  when: not origin_ips_exist | default(false)

- name:
  pause:
    prompt: "Do you want to use the origins in testing mode? (yes/no) [no]: "
    echo: yes
  register: testing_mode
  when: "'origin' in group_names"

- name:
  pause:
    prompt: "\nEnter your postgresql password"
    echo: no
  register: postgres_password
  when: "'origin' in group_names"

- name:
  pause:
    prompt: "\nEnter your provider wallet address. (The one with the staking)"
    echo: yes
  register: wallet_address
  when: "'origin' in group_names"

- name:
  pause:
    prompt: "\nEnter your wallet private key for resource(s) decrypt. This should match the public encryption key provided on the app. (It may or may not be the same as the staking one for security reasons)."
    echo: no
  register: private_key
  when: "'origin' in group_names"

# - name:
#   pause:
#     prompt: "\nEnter your wallet network"
#     echo: no
#   register: wallet_network
#   when: "'edge' in group_names"

- name:
  pause:
    prompt: "\nEnter your server disk space capability in Gigabytes"
  register: disk_space
  when: "'edge' in group_names"

- name:
  pause:
    prompt: "\nEnter your server cpu cores capability"
  register: cpu_cores
  when: "'edge' in group_names"

- name:
  pause:
    prompt: "\nEnter your server system ram capability in Gigabytes"
  register: system_ram
  when: "'edge' in group_names"

- name:
  pause:
    prompt: "\nEnter the origin's public ssh key"
    echo: no
  register: public_ssh_key
  when: "'edge' in group_names"