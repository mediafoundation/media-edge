- name: Add GlusterFS repository key
  apt_key:
    url: "https://download.gluster.org/pub/gluster/glusterfs/9/rsa.pub"
    state: present

- name: Add GlusterFS repository
  apt_repository:
    repo: "deb https://download.gluster.org/pub/gluster/glusterfs/LATEST/Debian/{{ ansible_distribution_major_version }}/amd64/apt {{ ansible_distribution_release }} main"
    state: present

# Only edges in inventory
- name: Install GlusterFS client on edges
  apt:
    name: glusterfs-client
    state: present
    update_cache: yes
  when: inventory_hostname in groups["edge"]
#

# Only origins tasks
- name: Configure GlusterFS for origin nodes
  block:
    ## All origins
    - name: Install GlusterFS server on origins
      apt:
        name: glusterfs-server
        state: present
        update_cache: yes
      
    - name: Enable and start glusterd service
      systemd:
        name: glusterd
        enabled: true
        state: restarted
        daemon_reload: yes

    - name: Create brick directory
      file:
        path: /etc/ssl/caddy
        state: directory
        owner: 1000
        group: 1000
        mode: '0755'
    ##
    ## Only on first origin
    - name: First Origin configuration for GlusterFS
      block:
        - name: Configure GlusterFS peers
          command: gluster peer probe {{ hostvars[item]['ansible_host'] }}
          with_items: "{{ groups['origin'][1:] }}"
          loop_control:
            pause: 5

        - name: Create GlusterFS volume
          command: >
            gluster volume create cert_vol
            {% if groups['origin'] | length > 1 %}
            replica {{ groups['origin'] | length }}
            {% endif %}
            transport tcp
            {% for host in groups['origin'] %}
            {{ hostvars[host]['ansible_host'] }}:/etc/ssl/caddy
            {% endfor %}
            force
          register: create_volume
          failed_when: 
            - "'already exists' not in create_volume.stderr"
            - create_volume.rc != 0
            
        - name: Set auth.allow for GlusterFS volume
          command: >
            gluster volume set cert_vol auth.allow {{ ((groups['origin'] | map('extract', hostvars, 'ansible_host') | list) + (groups['edge'] | map('extract', hostvars, 'ansible_host') | list)) | join(',') }}

        - name: Start GlusterFS volume
          command: gluster volume start cert_vol
          when: inventory_hostname in groups["origin"]
          register: start_volume
          failed_when: 
            - "'already started' not in start_volume.stderr"
            - start_volume.rc != 0
      when: inventory_hostname == groups["origin"][0]
    ##
  when: inventory_hostname in groups["origin"]
#

- name: Prepare to mount GlusterFS volume on all nodes
  set_fact: 
    primary_origin_server: "{{ origin_ips[0] }}"
    backup_origin_servers: "{{ origin_ips[1:] | join(',') }}"
    mount_point: /root/.local/share/caddy/certificates/acme-v02.api.letsencrypt.org-directory/

- name: Set mount options based on group membership
  set_fact:
    mount_opts: "{{ 'defaults,_netdev,ro' + (',backup-volfile-servers=' + backup_origin_servers if groups['origin'] | length > 1 else '') if inventory_hostname in groups['edge'] else 'defaults,_netdev' + (',backup-volfile-servers=' + backup_origin_servers if groups['origin'] | length > 1 else '') }}"
    #mount_opts: "{{ 'defaults,_netdev' + (',backup-volfile-servers=' + backup_origin_servers if groups['origin'] | length > 1 else '') }}"

- name: Check if mount point is mounted
  shell: >
    mountpoint -q "{{ mount_point }}" && echo 'mounted' || echo 'not mounted'
  register: mount_check
  ignore_errors: true
  changed_when: false

- name: Unmount mount point if mounted
  shell: umount "{{ mount_point }}"
  when: "'mounted' in mount_check.stdout"
  ignore_errors: true

- name: Clear mount point just in case
  file:
    state: absent
    path: "{{ mount_point }}"
  when: "'not mounted' in mount_check.stdout"

- name: Create mount point
  file:
    path: "{{ mount_point }}"
    state: directory
    owner: 1000
    group: 1000
    mode: '0755'

- name: Mount GlusterFS volume using command
  command: "mount -t glusterfs -o {{ mount_opts }} {{ primary_origin_server }}:/cert_vol {{ mount_point }}"

- name: Add GlusterFS volume to /etc/fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "{{ primary_origin_server }}:/cert_vol {{ mount_point }} glusterfs {{ mount_opts }} 0 0"
    state: present
    create: yes