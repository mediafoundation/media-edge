# public keys 
 
- name: adds keys from other edges and ourselves to access the servers
  ansible.builtin.copy:
   src: files/edge/system/authorized_keys
   dest: ~/.ssh/authorized_keys
  when: install_option == 'Client'

# caddy custom domain certificate managment / ssh keys for later

- name: generate local ssh keys
  ansible.builtin.shell: rm -f ~/.ssh/id_rsa && ssh-keygen -m PEM -t rsa -b 4096 -N '' -f ~/.ssh/id_rsa
  when: install_option == 'Server'

- name: Display public key to paste into remote default media-edges
  ansible.builtin.shell: cat ~/.ssh/id_rsa.pub chdir=~/.ssh/
  register: command_output
  when: install_option == 'Server'

- name: Print ssh key to console. Put this inside ~/.ssh/authorized_keys into remote default media-edges
  ansible.builtin.debug:
    msg: "{{command_output.stdout}}"
  when: install_option == 'Server'

#- name: confirm keys are into default media-edges
  #ansible.builtin.pause:
    #prompt: Only if installing private network.Please confirm you've already pasted the new ssh keys from this media-edge(s) into edge-default.guard.media and all active media guards, otherwise the installation WILL fail. Press return to continue. Press Ctrl+c and then "a" to abort

#- name: Copying ssl certificates from default edge (lets encrypt)
#  ansible.builtin.shell: rsync -avPe 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' root@edge-default.guard.media:/root/.local/share/caddy /root/.local/share/
  
- name: creates cron rsync for certificate updates every 1 minute
  ansible.builtin.cron:
    name: "rsync for certificate updates from default edge (lets encrypt), every 1 minute"
    minute: "*/1"
    job: "rsync -aure 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' root@edge-default.guard.media:/root/.local/share/caddy /root/.local/share/"
  when: install_option == 'Server'

- name: Copy DANE cert files (HNS)
  ansible.builtin.copy:
    dest: ~/media-edge/
    src: files/edge/hnsd/{{ item }}
  with_items:
  - cert-dcdn.crt
  - cert-dcdn.key
  when: install_option == 'Client'
