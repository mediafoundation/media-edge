

- name: Prepare the system for Media-Edge
  file:
    state: absent
    path: /usr/share/keyrings/elasticsearch-keyring.gpg

- name: Adding elasticsearch keyring
  shell: |
    wget -O - https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | tee /etc/apt/sources.list.d/elastic-8.x.list

- name: Install and configure Origin stats 
  block:
    - name: Installing Elastic Stack
      apt:
        update_cache: yes
        install_recommends: true
        state: latest
        name:
          - elasticsearch
          - logstash
          - kibana

    - name: Configure Elasticsearch
      template:
        src: files/origin/elasticsearch.yml.j2
        dest: /etc/elasticsearch/elasticsearch.yml

    - name: Configure Logstash
      template:
        src: files/origin/logstash.conf.j2
        dest: /etc/logstash/conf.d/logstash.conf

    - name: Configure Kibana
      template:
        src: files/origin/kibana.yml.j2
        dest: /etc/kibana/kibana.yml

    - name: Force stop Java programs if running (may fail, ignore is ok)
      shell: |
        pkill -9 -u elasticsearch
        pkill -9 -u logstash
      ignore_errors: true

    - name: Start and enable Elasticsearch service
      systemd:
        name: elasticsearch
        state: restarted
        enabled: yes

    - name: Start and enable Logstash service
      systemd:
        name: logstash
        state: restarted
        enabled: yes

    - name: Start and enable Kibana service
      systemd:
        name: kibana
        state: restarted
        enabled: yes

    - name: Copy dashboard
      copy:
        src: files/origin/dashboard.ndjson
        dest: /root/dashboard.ndjson

    - name: Check kibana status
      uri:
        url: http://localhost:5601/api/data_views
        method: GET
        status_code: 200
      register: response
      until: response.status == 200
      retries: 10
      delay: 5

    - name: Import dashboard
      command:
        cmd: 'curl -X POST http://localhost:5601/api/saved_objects/_import?createNewCopies=true -H "kbn-xsrf: true" --form file=@dashboard.ndjson'
        chdir: /root/       

  when: inventory_hostname in groups["origin"]

- name: Copying Filebeat .deb package to target
  copy:
    src: files/edge/filebeat/filebeat-8.10.1-amd64.deb
    dest: /tmp/filebeat-8.10.1-amd64.deb

- name: Install Filebeat from local .deb package
  apt:
    deb: /tmp/filebeat-8.10.1-amd64.deb

- name: Configure Filebeat
  template:
    src: files/edge/filebeat/filebeat.yml.j2
    dest: /etc/filebeat/filebeat.yml
  vars:
     origin_ip: "{{ hostvars[groups['origin'][0]]['ansible_host'] }}"

- name: Start and enable Filebeat service
  systemd:
    name: filebeat
    state: restarted
    enabled: yes
  when: inventory_hostname in groups["edge"]